setwd("C:/DSA/FCD/BigDataRAzure/Cap17/Analise-Exploratoria-Dados-Economicos")
read.csv("dataset.csv")
read.csv("dataset.csv")
dados = read.csv("dataset.csv")
dados = read.csv("dataset.csv")
View(dados)
names(dados) = c("Country", "Year", "LifeLadder", "PIBPerCapta", "SocialSupport", "HealthyLifeExpectancy", "Freedom", "Generosity", "CorruptionPerceptions", "PositiveAffects", "NegativeAffects")
View(dados)
summary(dados)
str(dados)
unique(dados$Country)
str(dados)
summary(dados)
is.na(dados)
lapply(dados, is.na)
summary(dados)
dados = na.omit(dados)
View(dados)
dados = read.csv("dataset.csv")
names(dados) = c("Country", "Year", "LifeLadder", "PIBPerCapta", "SocialSupport", "HealthyLifeExpectancy", "Freedom", "Generosity", "CorruptionPerceptions", "PositiveAffects", "NegativeAffects")
View(dados)
str(dados)
summary(dados)
install.packages("mice")
library(mice)
md.pattern(dados)
md.pattern(dados$PIBPerCapta)
napattern = md.pattern(dados)
View(napattern)
?md.pattern
md.pattern(dados[-c("Country", "Year", "LifeLadder")])
md.pattern(dados[,-c("Country", "Year", "LifeLadder")])
md.pattern(dados[,c("Country", "Year", "LifeLadder")])
md.pattern(dados[,-c("Country", "Year", "LifeLadder")])
md.pattern(dados-[,c("Country", "Year", "LifeLadder")])
md.pattern(dados[-,c("Country", "Year", "LifeLadder")])
md.pattern(dados[,c("PIBPerCapta", "SocialSupport", "HealthyLifeExpectancy", "Freedom", "Generosity", "CorruptionPerceptions", "PositiveAffects", "NegativeAffects")])
?mice
mice(dados, m=5, maxit=50)
dados_limpos = mice(dados, m=5, maxit=50)
View(dados_limpos)
View(dados_limpos$data)
summary(dados_limpos$data)
summary(dados_limpos)
dados_limpos$imp$LifeLadder
dados_limpos$imp$PIBPerCapta
completedata = complete(dados_limpos, 3)
View(completedata)
summary(completedata)
dados_limpos = complete(dados_limpos, 3)
View(dados_limpos)
str(dad)
str(dados_limpos)
summary(dados_limpos)
for(x in 2:11){
lapply(dados_limpos[2], boxplot)
}
for(x in 2:11){
lapply(dados_limpos[x], boxplot)
}
for(x in 2:11){
lapply(dados_limpos[x], boxplot(main = colnames(dados_limpos[x])))
}
for(x in 2:11){
lapply(dados_limpos[x], boxplot(main = x))
}
for(x in 2:11){
lapply(dados_limpos[x], boxplot(main = x))
}
?boxplot
library(mice)
library(ggplot2)
lapply(dados_limpos[x], ggplot(dados_limpos[x]) + geom_boxplot())
for(x in 2:11){
lapply(dados_limpos[x], ggplot(dados_limpos[x]) + geom_boxplot())
}
for(x in 2:11){
lapply(dados_limpos[x], ggplot(data = dados_limpos, aes(dados_limpos[x])) + geom_boxplot())
}
for(x in 2:11){
lapply(dados_limpos[x], boxplot(dados_limpos[x]))
}
summary(dados)
summary(dados_limpos)
str(dados_limpos)
col_names_numeric = c("Year", "LifeLadder", "PIBPerCapta", "SocialSupport", "HealthyLifeExpectancy", "Freedom", "Generosity", "CorruptionPerceptions", "PositiveAffects", "NegativeAffects")
?aes_string
lapply(col_names_numeric, function(x){
ggplot(dados_limpos, aes_string(x)) +
geom_boxplot() +
ggtitle(paste("Boxplot de ",x))
})
ggplot(data = dados_limpos, aes(Country)) + geom_histogram()
str(dados_limpos)
metodos <- c("pearson", "spearman")
cors <- lapply(metodos, function(method)
(cor(dados_limpos[, col_names_numeric], method = method)))
library(lattice)
plot.cors <- function(x, labs){
diag(x) <- 0.0
plot( levelplot(x,
main = paste("Plot de Correlação usando Método", labs),
scales = list(x = list(rot = 90), cex = 1.0)) )
}
# Mapa de Correlação
Map(plot.cors, cors, metodos)
cor(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy)
cor(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy, method = "pearson")
?cor
cor(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy, method = "spearman")
cor(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy, method = "kendall")
ggplot(dados_limpos, aes(PIBPerCapta, HealthLifeExpectancy)) +
geom_abline()
ggplot(dados_limpos, aes(PIBPerCapta, HealthLifeExpectancy)) +
geom_area()
ggplot(dados_limpos, aes(PIBPerCapta, HealthLifeExpectancy)) +
geom_density()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_abline()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_abline()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg)) + geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = as.factor(am))) + geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = cyl)) + geom_point()
ggplot(data = mtcars, aes(x = as.factor(cyl))) + geom_bar()
ggplot(data = diamonds, aes(x = price, group = cut, fill = cut)) +
geom_density(adjust = 1.5)
sp = ggplot(tips, aes(x = total_bill, y = tip/total_bill)) + geom_point(shape = 1)
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point()
data(tips, package = "reshape2")
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = "lm")
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 1) +
geom_smooth(method = "lm", color = "red", se = FALSE)
data = data.frame(cond = rep(c("Obs 1", "Obs 2"),
each = 10), var1 = 1:100, +
rnorm(100, sd = 9), var2 = 1:100 +
rnorm(100, sd = 16))
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 1) +
geom_smooth(method = "lm", color = "red", se = FALSE)
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red")
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
x = rnorm(10,5,7)
y = rpois(10,7)
plot(x, y, col = 123, pch = 10, main = "Multi Scatterplot", col.main = "red",
cex.main = 1.5, xlab = "Variável Independente", ylab = "Variável Dependente")
plot(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy, col = 123, pch = 10, main = "Multi Scatterplot", col.main = "red",)
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida")
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme_bw()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme_dark()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme_minimal()
?line
?theme
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
theme(title = "PIB per Capta X Expectativa de Vida")
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida")
library(ggthemr)
install.packages("ggthemr")
library(ggthemr)
install.packages("ggtech")
library(ggtech)
?theme
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme(title = "center")
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme(plot.title = "center")
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme(plot.title.position = "top")
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme(plot.title.position = "plot")
install.packages("ggthemes")
library(ggthemes)
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme_pander()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme_fivethirtyeight()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme_pander()
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme_pander()
cor(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy, method = "pearson")
cor(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy, method = "spearman")
