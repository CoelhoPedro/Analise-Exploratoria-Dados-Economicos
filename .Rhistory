setwd("C:/DSA/FCD/BigDataRAzure/Cap17/Analise-Exploratoria-Dados-Socioeconomicos")
library(mice)
library(ggplot2)
library(lattice)
library(ggthemes)
dados = read.csv("dataset.csv")
View(dados)
# Renomeando as variáveis
names(dados) = c("Country", "Year", "LifeLadder", "PIBPerCapta", "SocialSupport", "HealthyLifeExpectancy", "Freedom", "Generosity", "CorruptionPerceptions", "PositiveAffects", "NegativeAffects")
str(dados)
summary(dados)
unique(dados$Country)
# utilizando o pacote mice para fazer a imputação de valores NA
md.pattern(dados[,c("PIBPerCapta", "SocialSupport", "HealthyLifeExpectancy", "Freedom", "Generosity", "CorruptionPerceptions", "PositiveAffects", "NegativeAffects")])
dados_limpos = mice(dados, m=5, maxit=50)
summary(dados_limpos)
dados_limpos$imp$PIBPerCapta
dados_limpos = complete(dados_limpos, 3)
View(dados_limpos)
summary(dados_limpos)
str(dados_limpos)
# Fazendo o boxplot para as variáveis numéricas
col_names_numeric = c("Year", "LifeLadder", "PIBPerCapta", "SocialSupport", "HealthyLifeExpectancy", "Freedom", "Generosity", "CorruptionPerceptions", "PositiveAffects", "NegativeAffects")
lapply(col_names_numeric, function(x){
ggplot(dados_limpos, aes_string(x)) +
geom_boxplot() +
ggtitle(paste("Boxplot de ",x))
})
# Verificando a correlação entre as variáveis
metodos <- c("pearson", "spearman")
cors <- lapply(metodos, function(method)
(cor(dados_limpos[, col_names_numeric], method = method)))
plot.cors <- function(x, labs){
diag(x) <- 0.0
plot( levelplot(x,
main = paste("Plot de Correlação usando Método", labs),
scales = list(x = list(rot = 90), cex = 1.0)) )
}
# Mapa de Correlação
Map(plot.cors, cors, metodos)
ggplot(dados_limpos, aes(PIBPerCapta, HealthyLifeExpectancy)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "PIB per Capta X Expectativa de Vida") +
theme_pander()
cor(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy, method = "pearson")
cor(dados_limpos$PIBPerCapta, dados_limpos$HealthyLifeExpectancy, method = "spearman")
plot.cors <- function(x, labs){
diag(x) <- 0.0
plot( levelplot(x,
main = paste("Plot de Correlação usando Método", labs),
scales = list(x = list(rot = 90), cex = 1.0)) )
}
plot.cors <- function(x, labs){
diag(x) <- 0.0
plot( levelplot(x,
main = paste("Plot de Correlação usando Método", labs),
scales = list(x = list(rot = 90), cex = 1.0)) )
}
# Mapa de Correlação
Map(plot.cors, cors, metodos)
ggplot(dados_limpos, aes(LifeLadder, CorruptionPerceptions)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Escada da Vida X Percepção Sobre a Corrupção") +
theme_pander()
cor(dados_limpos$LifeLadder, dados_limpos$CorruptionPerceptions, method = "pearson")
cor(dados_limpos$LifeLadder, dados_limpos$CorruptionPerceptions, method = "spearman")
# Mapa de Correlação
Map(plot.cors, cors, metodos)
# Mapa de Correlação
Map(plot.cors, cors, metodos)
ggplot(dados_limpos, aes(LifeLadder, PositiveAffects)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Escada da Vida X Felicidade") +
theme_pander()
cor(dados_limpos$LifeLadder, dados_limpos$PositiveAffects, method = "pearson")
cor(dados_limpos$LifeLadder, dados_limpos$PositiveAffects, method = "spearman")
# Mapa de Correlação
Map(plot.cors, cors, metodos)
library(dplyr)
suporte_por_pais = dados_limpos %>% select(Country, SocialSupport) %>%
summarise(avg(SocialSupport)) %>%
group_by(Country)
suporte_por_pais = dados_limpos %>% select(Country, SocialSupport) %>%
summarise(mean(SocialSupport)) %>%
group_by(Country)
suporte_por_pais = dados_limpos %>% select("Country", "SocialSupport") %>%
summarise(mean(SocialSupport)) %>%
group_by(Country)
suporte_por_pais = dados_limpos %>% select(Country, SocialSupport) %>%
summarise(mean(SocialSupport)) %>%
group_by(Country)
suporte_por_pais = dados_limpos %>% select(Country, SocialSupport) %>%
summarise(media_suporte_social = mean(SocialSupport)) %>%
group_by(Country) %>%
arrange(desc(media_suporte_social))
library(readr)
dados2 = read_csv()
dados2 = read_csv("dataset.csv")
class(dados2)
dados_limpos_tibble = as_tibble(dados_limpos)
suporte_por_pais = dados_limpos_tibble %>% select(Country, SocialSupport) %>%
summarise(media_suporte_social = mean(SocialSupport)) %>%
group_by(Country) %>%
arrange(desc(media_suporte_social))
suporte_por_pais = dados2 %>% select(Country, SocialSupport) %>%
summarise(media_suporte_social = mean(SocialSupport)) %>%
group_by(Country) %>%
arrange(desc(media_suporte_social))
names(dados2) = c("Country", "Year", "LifeLadder", "PIBPerCapta", "SocialSupport", "HealthyLifeExpectancy", "Freedom", "Generosity", "CorruptionPerceptions", "PositiveAffects", "NegativeAffects")
suporte_por_pais = dados2 %>% select(Country, SocialSupport) %>%
summarise(media_suporte_social = mean(SocialSupport)) %>%
group_by(Country) %>%
arrange(desc(media_suporte_social))
suporte_por_pais = dados_limpos_tibble %>% select(Country, SocialSupport) %>%
group_by(Country) %>%
summarise(media_suporte_social = mean(SocialSupport)) %>%
arrange(desc(media_suporte_social))
View(suporte_por_pais)
suporte_por_pais = dados_limpos_tibble %>% select(Country, SocialSupport) %>%
group_by(Country) %>%
summarise(media_suporte_social = mean(SocialSupport)) %>%
arrange(asc(media_suporte_social))
suporte_por_pais = dados_limpos_tibble %>% select(Country, SocialSupport) %>%
group_by(Country) %>%
summarise(media_suporte_social = mean(SocialSupport))
View(suporte_por_pais)
?arrange
suporte_por_pais = dados_limpos_tibble %>% select(Country, SocialSupport) %>%
group_by(Country) %>%
summarise(media_suporte_social = mean(SocialSupport)) %>%
arrange(media_suporte_social)
View(suporte_por_pais)
ggplot(suporte_por_pais, aes(x = as.factor(Country))) + geom_bar()
ggplot(suporte_por_pais, aes(x = as.factor(Country), y = media_suporte_social),
colour = as.factor(Country)) +
geom_bar()
ggplot(suporte_por_pais, aes(x = as.factor(Country), y = media_suporte_social),
colour = as.factor(Country)) + geom_abline()
ggplot(suporte_por_pais, aes(x = as.factor(Country), y = media_suporte_social),
colour = as.factor(Country)) + geom_col()
ggplot(suporte_por_pais[10,], aes(x = as.factor(Country), y = media_suporte_social),
colour = as.factor(Country)) + geom_col()
ggplot(suporte_por_pais[1:5,], aes(x = as.factor(Country), y = media_suporte_social),
colour = as.factor(Country)) + geom_col()
suporte_por_pais = dados_limpos_tibble %>% select(Country, SocialSupport) %>%
group_by(Country) %>%
summarise(media_suporte_social = mean(SocialSupport)) %>%
arrange(media_suporte_social)
View(suporte_por_pais)
ggplot(suporte_por_pais[1:5,], aes(x = as.factor(Country), y = media_suporte_social),
colour = as.factor(Country)) + geom_col()
ggplot(suporte_por_pais[1:5,], aes(x = as.factor(Country), y = media_suporte_social),
colour = as.factor(Country)) + geom_col() +
labs(title = "5 Países com os menores índices de suporte racial") +
theme_pander()
min(suporte_por_pais$media_suporte_social)
corrupcao_por_pais = dados_limpos_tibble %>% select(Country, CorruptionPerceptions) %>%
group_by(Country) %>%
summarise(media_percepcao_corrupcao = mean(CorruptionPerceptions)) %>%
arrange(media_percepcao_corrupcao)
View(corrupcao_por_pais)
View(suporte_por_pais)
corrupcao_por_pais = dados_limpos_tibble %>% select(Country, CorruptionPerceptions) %>%
group_by(Country) %>%
summarise(media_percepcao_corrupcao = mean(CorruptionPerceptions)) %>%
arrange(desc(media_percepcao_corrupcao))
View(corrupcao_por_pais)
corrupcao_por_pais["Central African Republic"]
corrupcao_por_pais["Central African Republic", ]
corrupcao_por_pais
print(corrupcao_por_pais, n = 55)
View(suporte_por_pais)
medias_pais = cbind(corrupcao_por_pais, suporte_por_pais)
View(medias_pais)
medias_pais[, 3] = NULL
View(medias_pais)
# Mapa de Correlação
Map(plot.cors, cors, metodos)
ggplot(dados_limpos, aes(SocialSupport, CorruptionPerceptions)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Suporte Social X Percepção de Corrupção") +
theme_pander()
cor(dados_limpos$LifeLadder, dados_limpos$PositiveAffects, method = "pearson")
cor(dados_limpos$SocialSupport, dados_limpos$CorruptionPerceptions, method = "pearson")
cor(dados_limpos$SocialSupport, dados_limpos$CorruptionPerceptions, method = "spearman")
# Mapa de Correlação
Map(plot.cors, cors, metodos)
ggplot(dados_limpos, aes(Generosity, PositiveAffects)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "GEnerosidade X Felicidade") +
theme_pander()
cor(dados_limpos$Generosity, dados_limpos$PositiveAffects, method = "pearson")
cor(dados_limpos$Generosity, dados_limpos$PositiveAffects, method = "spearman")
ggplot(dados_limpos, aes(Generosity, PositiveAffects)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Generosidade X Felicidade") +
theme_pander()
